#!/bin/bash

# Clear Context Build Diretory from previous execution
rm -rf "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}"

# Create Context Build Diretory
mkdir -p "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}"

# Copy Terraform Source Code to Build Context src/ directory
cp -RL "${TF_SOURCE_CODE_DIRECTORY?}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/src"

# Copy Scripts to add into Container Image
cp -R "${TF_PACKAGER_SCRIPTS_DIRECTORY_BUILD}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/scripts"

# Copy Terraform Service Account Credentials to Build Context
cp -L "${TERRAFORM_PROVIDER_TEMPLATE_CREDENTIALS_JSON}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/credentials.json"

# Copy Credentials to Download Remote Modules on Private Git Repository
cp -R "${HOME}/.ssh" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/.ssh"

# Copy SSH Config File with Strict Host Checking Disabled
cp "${TF_PACKAGER_TEMPLATES_DIRECTORY_BUILD}/ssh_config" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/.ssh/config"

# Stack Extensions to Override the Default Behavior
STACK_EXTENSIONS_ROOT_DIRECTORY="${TF_SOURCE_CODE_DIRECTORY}/stack"
STACK_EXTENSIONS_SCRIPTS_DIRECTORY="${STACK_EXTENSIONS_ROOT_DIRECTORY}/scripts"
STACK_EXTENSION_REMOTE_STATE_SCRIPT="${STACK_EXTENSIONS_SCRIPTS_DIRECTORY}/terraform_remote_state_file_path"

if [ -e "${STACK_EXTENSION_REMOTE_STATE_SCRIPT}" ]; then
  echo "Stack Extension Scripts Detected"
  echo ""
  echo "  source.................: ${STACK_EXTENSION_REMOTE_STATE_SCRIPT}"
  echo "  target.................: ${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY}/scripts/"
  echo ""

  cp "${STACK_EXTENSION_REMOTE_STATE_SCRIPT}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/scripts/"
fi

# Template: Credentials
envsubst < "${TERRAFORM_PROVIDER_TEMPLATE_CREDENTIALS_FILE}" > "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/credentials.conf"

# Template: Dockerfile
envsubst < "${TF_PACKAGER_TEMPLATES_DIRECTORY_BUILD}/Dockerfile" > "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/Dockerfile"

# Template: environment_variables.conf
envsubst < "${TF_PACKAGER_ENVIRONMENT_VARIABLES_FILE_NAME_TEMPLATE}" > "${TF_PACKAGER_ENVIRONMENT_VARIABLES_FILE_NAME}"

# Template: Terraform Backend Base Provider Config Fragment
cp "${TERRAFORM_BACKEND_TEMPLATE_FRAGMENT}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/backend_fragment.hcl"

# Template: Terraform Backend Backend Config
cp "${TERRAFORM_BACKEND_TEMPLATE_FILE}" "${TF_PACKAGER_TEMPORARY_BUILD_CONTEXT_DIRECTORY?}/backend.conf"
